#include <iostream>

using namespace std;

void merge2(int a[], int l2,int r2) //об'являємо функцію
{
  int i=l2;
  int mid=l2+(r2-l2)/2;
  int j=mid+1;
  int k=0, buf[100000];
  while(i <= mid && j <= r2) //поки ліва частина менша середини, а права частина більша за середину + 1
  {
    if(a[i] <= a[j]) //якщо ліва сторона менша правої
    {
      buf[k]=a[i]; //вносимо в буфер елемент лівої частини
      i++; //переміщаємося на наступний елемент 
    }
    else //якщо ліва не менша правої
    {
      buf[k]=a[j]; //заносимо елемент правох частини в буфер
      j++; //переміщаємося на наступний елемент зправа
    }
    k++; //переміщення на наступний елемент буфера
  }
  while(i<=mid) //коли ліва частина менше середини
  {
    buf[k]=a[i]; //поміщаємо в буфер ліву частину
    i++; //наступний ел лівої частини
    k++; //наступний елемент буфера
  }
  while(j<=r2) 
  {
    buf[k]=a[j];
    j++;
    k++;
  }
  for (int i = 0; i < k; i++) 
  {
        a[l2 + i] = buf[i]; //перекидуємо елементи з буфера в масив а
    }
}

void merge(int a[], int l, int r) 
{
    if (l<r) //якщо ліва менша правої
    {
    if (r - l == 1) //якщо тілька 2 елемента в масиві
  { 
        if (a[r] < a[l]) //якщо правіше менший, то ми їх міняємо місцями
        {
            swap(a[r], a[l]);
        }
    }
    else //якщо більше 2 елементів в масиві
    {
      merge(a, l, l+(r-l)/2); //сортування 1 частини за формулою
      merge(a, l+(r-l)/2 + 1, r); //сортування 2 частини за формулою
      merge2(a, l, r); //коли ми вже розбили по 1 елементу і починаємо збирати заново
  }
    }   
}

int main() {  
int n;
int a[100000];
    cin >> n;
    for (int i = 0; i < n; i++) //вводимо елементи
    {
        cin >> a[i];
    }
    merge(a, 0, n - 1); //запускаємо в функцію
    for (int i = 0; i < n; i++)
    {
        cout << a[i] << " "; //вивід відсортованого масиву
    }
    return 0;
}
